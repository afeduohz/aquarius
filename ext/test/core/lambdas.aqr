# puts #

# == #
(assert:(puts == puts) "test (puts == puts)")

# != #
(assert:(puts != 1) "test (puts != 1)")
(assert:(puts != nil) "test (puts != nil)")

# to_s #
(assert:((puts to_s) == "<lambda puts>") "test (puts to_s)")

# to_b #
(assert:((puts to_b) == true) "test (puts to_b)")

# type #
(assert:((puts type) == "lambda") "test (puts type)")

# : #
(assert:((puts:) == nil) "test (puts:)")




# show #

# == #
(assert:(show == show) "test (show == show)")

# != #
(assert:(show != 1) "test (show != 1)")
(assert:(show != nil) "test (show != nil)")

# to_s #
(assert:((show to_s) == "<lambda show>") "test (show to_s)")

# to_b #
(assert:((show to_b) == true) "test (show to_b)")

# type #
(assert:((show type) == "lambda") "test (show type)")

# : #
(assert:((show:) == nil) "test (show:)")





# noop #

# == #
(assert:(noop == noop) "test (noop == noop)")

# != #
(assert:(noop != 1) "test (noop != 1)")
(assert:(noop != nil) "test (noop != nil)")

# to_s #
(assert:((noop to_s) == "<lambda noop>") "test (noop to_s)")

# to_b #
(assert:((noop to_b) == true) "test (noop to_b)")

# type #
(assert:((noop type) == "lambda") "test (noop type)")

# : #
(assert:((noop:) == nil) "test (noop:)")




# assert #

# == #
(assert:(assert == assert) "test (assert == assert)")

# != #
(assert:(assert != 1) "test (assert != 1)")
(assert:(assert != nil) "test (assert != nil)")

# to_s #
(assert:((assert to_s) == "<lambda assert>") "test (assert to_s)")

# to_b #
(assert:((assert to_b) == true) "test (assert to_b)")

# type #
(assert:((assert type) == "lambda") "test (assert type)")

# : #
(assert:((assert:) == nil) "test (assert:)")
(assert:((assert: true) == nil) "test (assert: true)")
(try
    (assert:((assert: false) == nil) "test (assert: false)")
catch
    (assert: (error != nil) "test (assert: false)")
)



(puts: "puts/show/noop/assert checkpoints all passed.")
